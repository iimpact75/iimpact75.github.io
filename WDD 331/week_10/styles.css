html,
body {
    width: 100%;
    /*Ensure that the width is at maximum up to the limit but able to downsize as needed*/
    max-width: 600px;
    /*Set the max width for effect*/
    margin: auto;
    /*Ensures that the content is centered on the display screen*/
}

input[type=checkbox] {
    position: absolute;
    /*Fixes the position of the checkbox so it won't move in the browser in relation to anything else.*/
    cursor: pointer;
    /*ensures the mouse cursor reacts to the clicking*/
    opacity: 0;
    /*hides the button from view*/
    height: 100%;
    /*makes sure the checkbox runs the full height of the screen*/
    width: 100%;
    /*makes sure the checkbox runs the full width of the screen*/
    z-index: 100;
    /*ensures the checkbox is always on top*/
    
}

input[type=checkbox]:checked~div.door__top,
input[type=checkbox]:checked~div.door__bottom {
    transform: translateY(0);
    /*when the toggle state of the checkbox is changed it sets the door positions to run back to 0 start position*/
}


.hanger__doors {

    height: 100vh;
    /*ensure the height of the screen is fully used*/
    width: 100%;
    /*covers the whole width of the screen as actionable area*/
}

.hanger__wrapper {
    /*sets the width and the height so the wrapper is the whole area*/
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.doors {
    float: top;
    /*sets the positions for both doors to float to the top in order of each other*/
    background: linear-gradient(rgb(125, 125, 125)0%, rgb(125, 125, 125)10%, rgb(80, 80, 80)10%, rgb(80, 80, 80)20%, rgb(125, 125, 125)20%, rgb(125, 125, 125)30%, rgb(80, 80, 80)30%, rgb(80, 80, 80)40%, rgb(125, 125, 125)40%, rgb(125, 125, 125)50%, rgb(80, 80, 80)50%, rgb(80, 80, 80)60%, rgb(125, 125, 125)60%, rgb(125, 125, 125)70%, rgb(80, 80, 80)70%, rgb(80, 80, 80)80%, rgb(125, 125, 125)80%, rgb(125, 125, 125)90%, rgb(80, 80, 80)90%, rgb(80, 80, 80)100%);
    /*cause this is cool :P*/
    height: 50%;
    /*the height needs to be set at 50% for both the doors to meet in the middle*/
    width: 100%;
    /*fill the screen widthwise*/
    position: relative;
    /*sets the position reletice to the absolute position of the input checkbox that is covering the screen*/
    z-index: 2;
    /*this ensures that the position is below the text box but aboce the image*/
    overflow: hidden;
    /*ensures the overlow doen't try to readjust the screen and is out of site*/
    transition: all .75s cubic-bezier(1, .26, .57, -0.24);
    /*sets the default changes so that all aspects follow the transition with this div in .75 seconds and then the cubic-bezier sets the speed to simulate mechanical moving of the doors and adjustments to preasure*/
}

.door__top {
    transform: translateY(-100%);
    /*adjusts the Y position so that the door opens out of the view port*/
    overflow: hidden;
    /*keeps the extra pieces of the door hidden*/
    border-bottom: 2px solid black;
    /*I wanted a differentiating line of the seem of the doors*/
    text-align: center;
}

h1, h2{ /*just having fun :D*/
    position: relative;
    top: 45%;
    color: red;
    text-shadow: black 2px 2px;
}

.space img {
    position: absolute;
    /*image positioning needs to be fixed*/
    object-fit: cover;
    /*used to keep the aspect ration of the image reasonable with little distortion*/
    object-position: 50% 0%;
    /*keeps the image centered*/
    width: 100%;
    max-width: 600px;
    height: 100vh;
    z-index: 1;
    /*ensures this is hidden behind all the other layers*/
    margin: auto;

}

.door__bottom {
    transform: translateY(100%);
    /*sets the transition of the bottom door to be back past the div edge out of sight*/
    overflow: hidden;
    /*keeps the other pieces hidden beyond view*/
    border-top: 2px solid black;
    /*helps to give a defining edge to the joining seem of the doors*/
}